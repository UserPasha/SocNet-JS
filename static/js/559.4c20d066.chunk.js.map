{"version":3,"file":"static/js/559.4c20d066.chunk.js","mappings":"oLACA,EAAgC,+BAAhC,EAAyE,yBAAzE,EAAuL,0BCAvL,EAAuB,0BAAvB,EAA0D,4B,mBCgB1D,MAbA,SAAsBA,GAClB,IAAIC,EAAO,aAAeD,EAAME,GAChC,OACI,iBAAKC,UAAWC,EAAhB,WACI,gBACIC,IAAKL,EAAMM,IACXC,IAAI,YACR,SAAC,KAAD,CAASC,GAAIP,EAAKE,UAAW,SAAAM,GAAO,OAAIA,EAAQC,SAAWN,EAAWA,GAAtE,UAA8E,0BAAOJ,EAAMW,aCVvG,EAA0B,6BCa1B,MARA,SAAsBX,GAClB,OACI,gBAAKG,UAAWC,EAAhB,UACG,uBAAIJ,EAAMY,a,iDCmCrB,IAcMC,GAAmBC,EAAAA,EAAAA,GAAU,CAACC,KAAM,WAAjBD,EAdL,SAACd,GACjB,OACI,kBAAMgB,SAAUhB,EAAMiB,aAAtB,WACI,0BACI,SAACC,EAAA,EAAD,CAAOP,KAAM,aAAcQ,UAAWC,EAAAA,EAAUC,YAAa,qBAC7DC,SAAU,CAACC,EAAAA,GAAeC,EAAAA,SAE9B,0BACI,6CAQhB,EAlDA,SAAiBxB,GACb,IAKIyB,EAAczB,EAAM0B,QAAQC,KAAI,SAAAC,GAAC,OAAI,SAAC,GAAD,UACkBA,GADCA,EAAE1B,OAG1D2B,EAAe7B,EAAM6B,aAAaF,KAAI,SAAAG,GAAC,OAAI,SAAC,GAAD,UAA6BA,GAAVA,EAAE5B,OAGpE,OAAKF,EAAM+B,QAGP,iBAAK5B,UAAWC,EAAhB,WACI,gBAAKD,UAAWC,EAAhB,SAEKqB,KAGL,iBAAKtB,UAAWC,EAAhB,UAEKyB,GACD,0BAEI,SAAChB,EAAD,CAAkBG,SAzBR,SAACgB,GACvBC,QAAQC,IAAIF,EAAKG,YACjBnC,EAAMoC,WAAWJ,EAAKG,wBASA,SAAC,KAAD,CAAU3B,GAAI,Y,oBCI5C,GAAe6B,E,QAAAA,KAAQC,EAAAA,EAAAA,KAhBD,SAACC,GACnB,MAAO,CACHb,QAASa,EAAMC,YAAYd,QAC3BG,aAAcU,EAAMC,YAAYX,aAChCY,eAAgBF,EAAMC,YAAYC,mBAGjB,SAACC,GACtB,MAAO,CACHN,WAAY,SAACO,GACTD,GAASE,EAAAA,EAAAA,GAA2BD,SAMoBE,EAAAA,EAApE,CAAsFC","sources":["webpack://samurai/./src/Components/Dialogs/Dialogs.module.css?db5c","webpack://samurai/./src/Components/Dialogs/DialogItems/DialogsItem.module.css?34c1","Components/Dialogs/DialogItems/DialogItems.jsx","webpack://samurai/./src/Components/Dialogs/MessageItems/MessageItem.module.css?94e6","Components/Dialogs/MessageItems/MessageItems.jsx","Components/Dialogs/Dialogs.jsx","Components/Dialogs/DialogsContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogWrapper\":\"Dialogs_dialogWrapper__86vEO\",\"dialogs\":\"Dialogs_dialogs__XGJXk\",\"active\":\"Dialogs_active__l3GXa\",\"userDialog\":\"Dialogs_userDialog__l61OR\",\"messages\":\"Dialogs_messages__a2-nV\",\"message\":\"Dialogs_message__1noyz\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"DialogsItem_item__6TvSb\",\"active\":\"DialogsItem_active__ud7IQ\"};","import React from 'react';\r\nimport c from \"./DialogsItem.module.css\"\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nfunction DialogsItems(props) {\r\n    let path = \"/messages/\" + props.id\r\n    return (\r\n        <div className={c.item}>\r\n            <img\r\n                src={props.img}\r\n                alt=\"avatar\"/>\r\n            <NavLink to={path}className={navData => navData.isActive ? c.active : c.item}><span>{props.name}</span></NavLink>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DialogsItems;","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"MessageItem_wrapper__X-9ay\"};","import React from 'react';\r\nimport c from \"./MessageItem.module.css\"\r\n\r\n\r\n\r\n\r\nfunction MessageItems(props) {\r\n    return (\r\n        <div className={c.wrapper}>\r\n           <p>{props.message}</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MessageItems;","import React from 'react';\r\nimport c from \"./Dialogs.module.css\"\r\nimport DialogsItems from \"./DialogItems/DialogItems\";\r\nimport MessageItems from \"./MessageItems/MessageItems\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {TextArea} from \"../../common/Components/FormControls\";\r\nimport {MaxLengthIs100, requiredField} from \"../../utils/validation/validator\";\r\n\r\n\r\nfunction Dialogs(props) {\r\n    const addNewFormMessage = (data) => {\r\n        console.log(data.dialogText)\r\n        props.addMessage(data.dialogText)\r\n\r\n    }\r\n    let dialogsData = props.dialogs.map(d => <DialogsItems key={d.id}\r\n                                                           {...d}\r\n    />)\r\n    let messagesData = props.messagesData.map(m => <MessageItems key={m.id} {...m}/>)\r\n\r\n\r\n    if (!props.isAuth) return <Redirect to={\"/login\"}/>\r\n\r\n    return (\r\n        <div className={c.dialogWrapper}>\r\n            <div className={c.dialogs}>\r\n\r\n                {dialogsData}\r\n\r\n            </div>\r\n            <div className={c.messages}>\r\n\r\n                {messagesData}\r\n                <div>\r\n\r\n                    <DialogsReduxForm onSubmit={addNewFormMessage}/>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst DialogsForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field name={\"dialogText\"} component={TextArea} placeholder={\"Enter your message\"}\r\n                validate={[requiredField, MaxLengthIs100]}/>\r\n            </div>\r\n            <div>\r\n                <button>Send</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst DialogsReduxForm = reduxForm({form: \"Dialogs\"})(DialogsForm)\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport {addNewMessageActionCreator} from \"../../Redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport WithAuthRedirect from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogs: state.dialogsPage.dialogs,\r\n        messagesData: state.dialogsPage.messagesData,\r\n        newMessageText: state.dialogsPage.newMessageText,\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addMessage: (newFormMessage) => {\r\n            dispatch(addNewMessageActionCreator(newFormMessage))\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default compose(connect(mapStateToProps, mapDispatchToProps),WithAuthRedirect)(Dialogs);"],"names":["props","path","id","className","c","src","img","alt","to","navData","isActive","name","message","DialogsReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","TextArea","placeholder","validate","requiredField","MaxLengthIs100","dialogsData","dialogs","map","d","messagesData","m","isAuth","data","console","log","dialogText","addMessage","compose","connect","state","dialogsPage","newMessageText","dispatch","newFormMessage","addNewMessageActionCreator","WithAuthRedirect","Dialogs"],"sourceRoot":""}